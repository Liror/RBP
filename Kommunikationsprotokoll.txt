Remote Blackboard Protocol RBP v1 (auf TCP aufbauend)
von Lukas Rauch

- START Fehlernotiz -

Auf Grund eines Fehlers in der v1 Protokolldefinition wird Verschlüsselung nicht unterstützt. Das entsprechende Flag ist also immer auf 0 zu setzen, zusätzlich dürfen die Requests 'ENCRYPT-REQUEST' und 'DISABLE-ENCRYPTION' wie auch die Antworten '33' und '34' nicht verwendet werden. Für Kompatibilität mit zukünfitgen Versionen werden diese in der Definition dennoch beibehalten.
Die Ursache für den Fehler ist ein fehlendes Längenfeld im Protokoll. Um trotzdem die Länge eines Paketes bestimmen zu können um dieses auf Vollständigkeit zu prüfen muss ein Paket komplett durchgeparst werden, dies wäre bei verschlüsselten Daten nicht möglich.

Der Fehler wird in v2 des Protokolls behoben. Um die Versionen unterscheiden zu können ist in v2 das Encryption Flag immer auf 1 zu setzen. Zusätzlich wird ein weiteres Byte mit einem neuen Encryption Flag und einer Versionsnummer hinzugefügt. Ebenfalls wird ein 32bit Feld für die Paketlänge angefügt. v2 ist damit abwärtskompatibel zu v1. Alle Implementationen von v2 müssen auch v1 unterstützen können. Andersherum ist dies nicht möglich, v1 Anwendungen erkennen die Probleme allerdings direkt durch ein gesetztes Encryption Flag.

- ENDE Fehlernotiz -

minsize:              2 Byte
maxsize:      4.161.665 Byte
Default Port:     42042
Strings:          UTF-8 (nicht nullterminiert)
Boolean:              1 Byte (0 = false, not 0 = true)
Integer:              4 Byte (LE)

    0        1        2        3
+--------+--------+--------+--------+
|  TYPE  | #PARAM | opt PARAMLENGTH | Bytes 1-4
|        |        |                 |
+--------+--------+--------+--------+
|   opt (varlength) PARAMCONTENT    | Bytes 5-8
|                                   |
+--------+--------+--------+--------+
| opt PARAMLENGTH | opt (varlength) | Bytes 9-12
|                 |   PARAMLENGTH   |
+--------+--------+--------+--------+

FIELD DESCRIPTION

- TYPE -

  7 6 5 4 3 2 1 0
+-.-.-.-.-.-.-.-.-+
| E R MESSAGETYPE |
+-.-.-.-.-.-.-.-.-+

E -> Encryption Flag (1 bit)
     0 nicht verschlüsselt
     1 verschlüsselt

R -> Response Flag (1 bit)
     0 bei Anfrage
     1 bei Antwort

bei Anfrage
MESSAGETYPE -> (6 bit)
     0 DO NOTHING (0 parameters)
     1 CREATE (1 parameters -> BLACKBOARD_NAME)
     2 DISPLAY (2 parameters -> BLACKBOARD_NAME, MESSAGE)
     3 READ (1 parameters -> BLACKBOARD_NAME)
     4 CLEAR (1 parameters -> BLACKBOARD_NAME)
     5 STATUS (1 parameter -> BLACKBOARD_NAME)
     6 DELETE (1 parameters -> BLACKBOARD_NAME)
     7 DELETEALL (0 parameters)
     33 ENCRYPT-REQUEST (1 parameters -> 32B_AES_KEY)
     34 DISABLE-ENCRYPTION (0 parameters)

bei Antwort
MESSAGETYPE -> (6 bit)
     0 DID NOTHING (0 parameters)
     1 Blackboard erfolgreich erstellt (0 parameters)
     2 Blackboard erfolgreich geleert (0 parameters)
     3 Status erfolgreich gelesen (1 parameters -> BLACKBOARD_EMPTY)
     4 Nachricht erfolgreich gelesen (1 parameters -> MESSAGE)
     5 Nachricht erfolgreich gespeichert (0 parameters)
     6 Blackboards gelöscht (1 parameters -> NUM_DELETED)
     17 Blackboard existiert schon (0 parameters)
     18 Blackboard ist leer (0 parameters)
     19 Blackboard existiert nicht (0 parameters)
     33 Verschlüsselung aktiviert (1 parameters -> 32B_AES_KEY)
     34 Verschlüsselung nicht aktiviert (0 parameters)
     62 Anfrage nicht unterstützt (0 parameters)
     63 Interner Fehler (0 parameters)

- #PARAM -

  7 6 5 4 3 2 1 0
+-.-.-.-.-.-.-.-.-+
| ___NUMPARAMS___ |
+-.-.-.-.-.-.-.-.-+

NUMPARAMS -> Anzahl der Parameter (8 bit)
     minvalue: 0
     maxvalue: 255
     Definiert die Anzahl der "opt PARAMLENGTH" und "opt (varlength) PARAMCONTENT" Felder

- opt PARAMLENGTH -

 151413121110 9 8 7 6 5 4 3 2 1 0
+-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-+
| __________PARAMLENGTH__________ |
+-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-+

PARAMLENGTH -> Länge des Parameters (16 bit LE)
     minvalue: 0
     maxvalue: 65535
     Definiert die Länge des nachfolgenden "opt (varlength) PARAMCONTENT" Feldes

- opt (varlength) PARAMCONTENT -

+-.-.-.-.-.-.-.-...
| PARAMCONTENT__
+-.-.-.-.-.-.-.-...

PARAMCONTENT -> Inhalt des Parameters (beliebige Länge)
     Länge in vorherigem "opt PARAMLENGTH" Feld spezifiziert

- VERSCHLÜSSELUNG -

Das erste Byte wird nicht verschlüsselt, nur der Rest der Anfrage.
Durch 256bit AES werden Anfragen auf n*16+1 Byte mit Zufallsdaten aufgefüllt, Datenmüll am Ende spielt für das Protokoll keine Rolle.

Client bekommt public RSA key des Servers.
Server hat einen private RSA key.

ENCRYPTION-FLAG wird gesetzt, sobald Daten mit AES verschlüsselt versendet werden.
Server meldet Antwort 34 falls Client das Flag setzt, aber die Verschlüsselung nicht initiiert hat.
Sobald Client Verschlüsselung initiiert hat antwortet Server immer verschlüsselt, auch wenn Client unverschlüsselte Anfragen stellt.

Aufbau einer Verbindung:
- Client sendet Anfrage 33 mit public RSA key des Servers verschlüsselt, Parameter ist ein key für die Symmetrische Verschlüsselung (AES)
- Server antwortet mit 33 bei Akzeptanz, Key wird zurück gesendet (bereits symmetrisch verschlüsselt)
- Server antwortet mit 34 falls Verschlüsselung nicht unterstützt oder Fehler (unverschlüsselt)

Abbau einer Verbindung:
- Client sendet Anfrage 34 (symmetrisch verschlüsselt)
- Server antwortet mit 34 egal ob Verschlüsselung bereits aktiviert wurde oder nicht (unverschlüsselt)
